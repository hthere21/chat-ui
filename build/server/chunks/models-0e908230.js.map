{"version":3,"file":"models-0e908230.js","sources":["../../../.svelte-kit/adapter-node/chunks/models.js"],"sourcesContent":["import { H as HF_TOKEN, j as OPENAI_API_KEY, T as TEXT_EMBEDDING_MODELS, k as MODELS, l as OLD_MODELS, m as HF_API_ROOT } from \"./private.js\";\nimport Handlebars from \"handlebars\";\nimport { z } from \"zod\";\nimport { textGenerationStream } from \"@huggingface/inference\";\nimport { pipeline } from \"@xenova/transformers\";\nimport JSON5 from \"json5\";\nHandlebars.registerHelper(\"ifUser\", function(options) {\n  if (this.from == \"user\")\n    return options.fn(this);\n});\nHandlebars.registerHelper(\n  \"ifAssistant\",\n  function(options) {\n    if (this.from == \"assistant\")\n      return options.fn(this);\n  }\n);\nfunction compileTemplate(input, model) {\n  const template = Handlebars.compile(input, {\n    knownHelpers: { ifUser: true, ifAssistant: true },\n    knownHelpersOnly: true,\n    noEscape: true,\n    strict: true,\n    preventIndent: true\n  });\n  return function render(inputs, options) {\n    return template({ ...model, ...inputs }, options);\n  };\n}\nasync function buildPrompt({\n  messages,\n  model,\n  preprompt,\n  continueMessage\n}) {\n  const filteredMessages = messages.filter((m) => m.from !== \"system\");\n  let prompt = model.chatPromptRender({ messages: filteredMessages, preprompt }).split(\" \").slice(-(model.parameters?.truncate ?? 0)).join(\" \");\n  if (continueMessage && model.parameters?.stop) {\n    prompt = model.parameters.stop.reduce((acc, curr) => {\n      if (acc.endsWith(curr)) {\n        return acc.slice(0, acc.length - curr.length);\n      }\n      return acc;\n    }, prompt.trimEnd());\n  }\n  return prompt;\n}\nconst endpointTgiParametersSchema = z.object({\n  weight: z.number().int().positive().default(1),\n  model: z.any(),\n  type: z.literal(\"tgi\"),\n  url: z.string().url(),\n  accessToken: z.string().default(HF_TOKEN),\n  authorization: z.string().optional()\n});\nfunction endpointTgi(input) {\n  const { url, accessToken, model, authorization } = endpointTgiParametersSchema.parse(input);\n  return async ({ messages, preprompt, continueMessage }) => {\n    const prompt = await buildPrompt({\n      messages,\n      preprompt,\n      model,\n      continueMessage\n    });\n    return textGenerationStream(\n      {\n        parameters: { ...model.parameters, return_full_text: false },\n        model: url,\n        inputs: prompt,\n        accessToken\n      },\n      {\n        use_cache: false,\n        fetch: async (endpointUrl, info) => {\n          if (info && authorization && !accessToken) {\n            info.headers = {\n              ...info.headers,\n              Authorization: authorization\n            };\n          }\n          return fetch(endpointUrl, info);\n        }\n      }\n    );\n  };\n}\nconst endpointAwsParametersSchema = z.object({\n  weight: z.number().int().positive().default(1),\n  model: z.any(),\n  type: z.literal(\"aws\"),\n  url: z.string().url(),\n  accessKey: z.string().min(1),\n  secretKey: z.string().min(1),\n  sessionToken: z.string().optional(),\n  service: z.union([z.literal(\"sagemaker\"), z.literal(\"lambda\")]).default(\"sagemaker\"),\n  region: z.string().optional()\n});\nasync function endpointAws(input) {\n  let AwsClient;\n  try {\n    AwsClient = (await import(\"aws4fetch\")).AwsClient;\n  } catch (e) {\n    throw new Error(\"Failed to import aws4fetch\");\n  }\n  const { url, accessKey, secretKey, sessionToken, model, region, service } = endpointAwsParametersSchema.parse(input);\n  const aws = new AwsClient({\n    accessKeyId: accessKey,\n    secretAccessKey: secretKey,\n    sessionToken,\n    service,\n    region\n  });\n  return async ({ messages, preprompt, continueMessage }) => {\n    const prompt = await buildPrompt({\n      messages,\n      continueMessage,\n      preprompt,\n      model\n    });\n    return textGenerationStream(\n      {\n        parameters: { ...model.parameters, return_full_text: false },\n        model: url,\n        inputs: prompt\n      },\n      {\n        use_cache: false,\n        fetch: aws.fetch.bind(aws)\n      }\n    );\n  };\n}\nasync function* openAICompletionToTextGenerationStream(completionStream) {\n  let generatedText = \"\";\n  let tokenId = 0;\n  for await (const completion of completionStream) {\n    const { choices } = completion;\n    const text = choices[0]?.text ?? \"\";\n    const last = choices[0]?.finish_reason === \"stop\";\n    if (text) {\n      generatedText = generatedText + text;\n    }\n    const output = {\n      token: {\n        id: tokenId++,\n        text,\n        logprob: 0,\n        special: last\n      },\n      generated_text: last ? generatedText : null,\n      details: null\n    };\n    yield output;\n  }\n}\nasync function* openAIChatToTextGenerationStream(completionStream) {\n  let generatedText = \"\";\n  let tokenId = 0;\n  for await (const completion of completionStream) {\n    const { choices } = completion;\n    const content = choices[0]?.delta?.content ?? \"\";\n    const last = choices[0]?.finish_reason === \"stop\";\n    if (content) {\n      generatedText = generatedText + content;\n    }\n    const output = {\n      token: {\n        id: tokenId++,\n        text: content ?? \"\",\n        logprob: 0,\n        special: last\n      },\n      generated_text: last ? generatedText : null,\n      details: null\n    };\n    yield output;\n  }\n}\nconst endpointOAIParametersSchema = z.object({\n  weight: z.number().int().positive().default(1),\n  model: z.any(),\n  type: z.literal(\"openai\"),\n  baseURL: z.string().url().default(\"https://api.openai.com/v1\"),\n  apiKey: z.string().default(OPENAI_API_KEY),\n  completion: z.union([z.literal(\"completions\"), z.literal(\"chat_completions\")]).default(\"chat_completions\"),\n  defaultHeaders: z.record(z.string()).optional(),\n  defaultQuery: z.record(z.string()).optional()\n});\nasync function endpointOai(input) {\n  const { baseURL, apiKey, completion, model, defaultHeaders, defaultQuery } = endpointOAIParametersSchema.parse(input);\n  let OpenAI;\n  try {\n    OpenAI = (await import(\"openai\")).OpenAI;\n  } catch (e) {\n    throw new Error(\"Failed to import OpenAI\", { cause: e });\n  }\n  const openai = new OpenAI({\n    apiKey: apiKey ?? \"sk-\",\n    baseURL,\n    defaultHeaders,\n    defaultQuery\n  });\n  if (completion === \"completions\") {\n    return async ({ messages, preprompt, continueMessage }) => {\n      const prompt = await buildPrompt({\n        messages,\n        continueMessage,\n        preprompt,\n        model\n      });\n      return openAICompletionToTextGenerationStream(\n        await openai.completions.create({\n          model: model.id ?? model.name,\n          prompt,\n          stream: true,\n          max_tokens: model.parameters?.max_new_tokens,\n          stop: model.parameters?.stop,\n          temperature: model.parameters?.temperature,\n          top_p: model.parameters?.top_p,\n          frequency_penalty: model.parameters?.repetition_penalty\n        })\n      );\n    };\n  } else if (completion === \"chat_completions\") {\n    return async ({ messages, preprompt }) => {\n      let messagesOpenAI = messages.map((message) => ({\n        role: message.from,\n        content: message.content\n      }));\n      if (messagesOpenAI?.[0]?.role !== \"system\") {\n        messagesOpenAI = [{ role: \"system\", content: preprompt ?? \"\" }, ...messagesOpenAI];\n      }\n      return openAIChatToTextGenerationStream(\n        await openai.chat.completions.create({\n          model: model.id ?? model.name,\n          messages: messagesOpenAI,\n          stream: true,\n          max_tokens: model.parameters?.max_new_tokens,\n          stop: model.parameters?.stop,\n          temperature: model.parameters?.temperature,\n          top_p: model.parameters?.top_p,\n          frequency_penalty: model.parameters?.repetition_penalty\n        })\n      );\n    };\n  } else {\n    throw new Error(\"Invalid completion type\");\n  }\n}\nconst endpointLlamacppParametersSchema = z.object({\n  weight: z.number().int().positive().default(1),\n  model: z.any(),\n  type: z.literal(\"llamacpp\"),\n  url: z.string().url().default(\"http://127.0.0.1:8080\"),\n  accessToken: z.string().min(1).default(HF_TOKEN)\n});\nfunction endpointLlamacpp(input) {\n  const { url, model } = endpointLlamacppParametersSchema.parse(input);\n  return async ({ messages, preprompt, continueMessage }) => {\n    const prompt = await buildPrompt({\n      messages,\n      continueMessage,\n      preprompt,\n      model\n    });\n    const r = await fetch(`${url}/completion`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        prompt,\n        stream: true,\n        temperature: model.parameters.temperature,\n        top_p: model.parameters.top_p,\n        top_k: model.parameters.top_k,\n        stop: model.parameters.stop,\n        repeat_penalty: model.parameters.repetition_penalty,\n        n_predict: model.parameters.max_new_tokens\n      })\n    });\n    if (!r.ok) {\n      throw new Error(`Failed to generate text: ${await r.text()}`);\n    }\n    const encoder = new TextDecoderStream();\n    const reader = r.body?.pipeThrough(encoder).getReader();\n    return async function* () {\n      let stop = false;\n      let generatedText = \"\";\n      let tokenId = 0;\n      while (!stop) {\n        const out = await reader?.read() ?? { done: false, value: void 0 };\n        if (out.done) {\n          reader?.cancel();\n          return;\n        }\n        if (!out.value) {\n          return;\n        }\n        if (out.value.startsWith(\"data: \")) {\n          let data = null;\n          try {\n            data = JSON.parse(out.value.slice(6));\n          } catch (e) {\n            return;\n          }\n          if (data.content || data.stop) {\n            generatedText += data.content;\n            const output = {\n              token: {\n                id: tokenId++,\n                text: data.content ?? \"\",\n                logprob: 0,\n                special: false\n              },\n              generated_text: data.stop ? generatedText : null,\n              details: null\n            };\n            if (data.stop) {\n              stop = true;\n              reader?.cancel();\n            }\n            yield output;\n          }\n        }\n      }\n    }();\n  };\n}\nconst endpointOllamaParametersSchema = z.object({\n  weight: z.number().int().positive().default(1),\n  model: z.any(),\n  type: z.literal(\"ollama\"),\n  url: z.string().url().default(\"http://127.0.0.1:11434\"),\n  ollamaName: z.string().min(1).optional()\n});\nfunction endpointOllama(input) {\n  const { url, model, ollamaName } = endpointOllamaParametersSchema.parse(input);\n  return async ({ messages, preprompt, continueMessage }) => {\n    const prompt = await buildPrompt({\n      messages,\n      continueMessage,\n      preprompt,\n      model\n    });\n    const r = await fetch(`${url}/api/generate`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        prompt,\n        model: ollamaName ?? model.name,\n        raw: true,\n        options: {\n          top_p: model.parameters.top_p,\n          top_k: model.parameters.top_k,\n          temperature: model.parameters.temperature,\n          repeat_penalty: model.parameters.repetition_penalty,\n          stop: model.parameters.stop,\n          num_predict: model.parameters.max_new_tokens\n        }\n      })\n    });\n    if (!r.ok) {\n      throw new Error(`Failed to generate text: ${await r.text()}`);\n    }\n    const encoder = new TextDecoderStream();\n    const reader = r.body?.pipeThrough(encoder).getReader();\n    return async function* () {\n      let generatedText = \"\";\n      let tokenId = 0;\n      let stop = false;\n      while (!stop) {\n        const out = await reader?.read() ?? { done: false, value: void 0 };\n        if (out.done) {\n          reader?.cancel();\n          return;\n        }\n        if (!out.value) {\n          return;\n        }\n        let data = null;\n        try {\n          data = JSON.parse(out.value);\n        } catch (e) {\n          return;\n        }\n        if (!data.done) {\n          generatedText += data.response;\n          yield {\n            token: {\n              id: tokenId++,\n              text: data.response ?? \"\",\n              logprob: 0,\n              special: false\n            },\n            generated_text: null,\n            details: null\n          };\n        } else {\n          stop = true;\n          yield {\n            token: {\n              id: tokenId++,\n              text: data.response ?? \"\",\n              logprob: 0,\n              special: true\n            },\n            generated_text: generatedText,\n            details: null\n          };\n        }\n      }\n    }();\n  };\n}\nconst endpoints = {\n  tgi: endpointTgi,\n  aws: endpointAws,\n  openai: endpointOai,\n  llamacpp: endpointLlamacpp,\n  ollama: endpointOllama\n};\nconst endpointSchema = z.discriminatedUnion(\"type\", [\n  endpointAwsParametersSchema,\n  endpointOAIParametersSchema,\n  endpointTgiParametersSchema,\n  endpointLlamacppParametersSchema,\n  endpointOllamaParametersSchema\n]);\nfunction sum(nums) {\n  return nums.reduce((a, b) => a + b, 0);\n}\nfunction chunk(arr, chunkSize) {\n  if (isNaN(chunkSize) || chunkSize < 1) {\n    throw new RangeError(\"Invalid chunk size: \" + chunkSize);\n  }\n  if (!arr.length) {\n    return [];\n  }\n  if (arr.length <= chunkSize) {\n    return [arr];\n  }\n  return range(Math.ceil(arr.length / chunkSize)).map((i) => {\n    return arr.slice(i * chunkSize, (i + 1) * chunkSize);\n  });\n}\nfunction range(n, b) {\n  return b ? Array(b - n).fill(0).map((_, i) => n + i) : Array(n).fill(0).map((_, i) => i);\n}\nconst embeddingEndpointTeiParametersSchema = z.object({\n  weight: z.number().int().positive().default(1),\n  model: z.any(),\n  type: z.literal(\"tei\"),\n  url: z.string().url(),\n  authorization: z.string().optional()\n});\nconst getModelInfoByUrl = async (url, authorization) => {\n  const { origin } = new URL(url);\n  const response = await fetch(`${origin}/info`, {\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      ...authorization ? { Authorization: authorization } : {}\n    }\n  });\n  const json = await response.json();\n  return json;\n};\nasync function embeddingEndpointTei(input) {\n  const { url, model, authorization } = embeddingEndpointTeiParametersSchema.parse(input);\n  const { max_client_batch_size, max_batch_tokens } = await getModelInfoByUrl(url);\n  const maxBatchSize = Math.min(\n    max_client_batch_size,\n    Math.floor(max_batch_tokens / model.chunkCharLength)\n  );\n  return async ({ inputs }) => {\n    const { origin } = new URL(url);\n    const batchesInputs = chunk(inputs, maxBatchSize);\n    const batchesResults = await Promise.all(\n      batchesInputs.map(async (batchInputs) => {\n        const response = await fetch(`${origin}/embed`, {\n          method: \"POST\",\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            ...authorization ? { Authorization: authorization } : {}\n          },\n          body: JSON.stringify({ inputs: batchInputs, normalize: true, truncate: true })\n        });\n        const embeddings = await response.json();\n        return embeddings;\n      })\n    );\n    const flatAllEmbeddings = batchesResults.flat();\n    return flatAllEmbeddings;\n  };\n}\nconst embeddingEndpointTransformersJSParametersSchema = z.object({\n  weight: z.number().int().positive().default(1),\n  model: z.any(),\n  type: z.literal(\"transformersjs\")\n});\nclass TransformersJSModelsSingleton {\n  static async getInstance(modelName) {\n    const modelPipelineInstance = this.instances.find(([name]) => name === modelName);\n    if (modelPipelineInstance) {\n      const [, modelPipeline] = modelPipelineInstance;\n      return modelPipeline;\n    }\n    const newModelPipeline = pipeline(\"feature-extraction\", modelName);\n    this.instances.push([modelName, newModelPipeline]);\n    return newModelPipeline;\n  }\n}\nTransformersJSModelsSingleton.instances = [];\nasync function calculateEmbedding(modelName, inputs) {\n  const extractor = await TransformersJSModelsSingleton.getInstance(modelName);\n  const output = await extractor(inputs, { pooling: \"mean\", normalize: true });\n  return output.tolist();\n}\nfunction embeddingEndpointTransformersJS(input) {\n  const { model } = embeddingEndpointTransformersJSParametersSchema.parse(input);\n  return async ({ inputs }) => {\n    return calculateEmbedding(model.name, inputs);\n  };\n}\nconst embeddingEndpointSchema = z.discriminatedUnion(\"type\", [\n  embeddingEndpointTeiParametersSchema,\n  embeddingEndpointTransformersJSParametersSchema\n]);\nconst embeddingEndpoints = {\n  tei: embeddingEndpointTei,\n  transformersjs: embeddingEndpointTransformersJS\n};\nconst modelConfig$1 = z.object({\n  /** Used as an identifier in DB */\n  id: z.string().optional(),\n  /** Used to link to the model page, and for inference */\n  name: z.string().min(1),\n  displayName: z.string().min(1).optional(),\n  description: z.string().min(1).optional(),\n  websiteUrl: z.string().url().optional(),\n  modelUrl: z.string().url().optional(),\n  endpoints: z.array(embeddingEndpointSchema).nonempty(),\n  chunkCharLength: z.number().positive(),\n  preQuery: z.string().default(\"\"),\n  prePassage: z.string().default(\"\")\n});\nconst rawEmbeddingModelJSON = TEXT_EMBEDDING_MODELS;\nconst embeddingModelsRaw = z.array(modelConfig$1).parse(JSON5.parse(rawEmbeddingModelJSON));\nconst processEmbeddingModel = async (m) => ({\n  ...m,\n  id: m.id || m.name\n});\nconst addEndpoint$1 = (m) => ({\n  ...m,\n  getEndpoint: async () => {\n    if (!m.endpoints) {\n      return embeddingEndpointTransformersJS({\n        type: \"transformersjs\",\n        weight: 1,\n        model: m\n      });\n    }\n    const totalWeight = sum(m.endpoints.map((e) => e.weight));\n    let random = Math.random() * totalWeight;\n    for (const endpoint of m.endpoints) {\n      if (random < endpoint.weight) {\n        const args = { ...endpoint, model: m };\n        switch (args.type) {\n          case \"tei\":\n            return embeddingEndpoints.tei(args);\n          case \"transformersjs\":\n            return embeddingEndpoints.transformersjs(args);\n        }\n      }\n      random -= endpoint.weight;\n    }\n    throw new Error(`Failed to select embedding endpoint`);\n  }\n});\nconst embeddingModels = await Promise.all(\n  embeddingModelsRaw.map((e) => processEmbeddingModel(e).then(addEndpoint$1))\n);\nconst defaultEmbeddingModel = embeddingModels[0];\nconst validateEmbeddingModel = (_models, key) => {\n  return z.enum([_models[0][key], ..._models.slice(1).map((m) => m[key])]);\n};\nconst validateEmbeddingModelByName = (_models) => {\n  return validateEmbeddingModel(_models, \"name\");\n};\nconst modelConfig = z.object({\n  /** Used as an identifier in DB */\n  id: z.string().optional(),\n  /** Used to link to the model page, and for inference */\n  name: z.string().default(\"\"),\n  displayName: z.string().min(1).optional(),\n  description: z.string().min(1).optional(),\n  logoUrl: z.string().url().optional(),\n  websiteUrl: z.string().url().optional(),\n  modelUrl: z.string().url().optional(),\n  datasetName: z.string().min(1).optional(),\n  datasetUrl: z.string().url().optional(),\n  userMessageToken: z.string().default(\"\"),\n  userMessageEndToken: z.string().default(\"\"),\n  assistantMessageToken: z.string().default(\"\"),\n  assistantMessageEndToken: z.string().default(\"\"),\n  messageEndToken: z.string().default(\"\"),\n  preprompt: z.string().default(\"\"),\n  prepromptUrl: z.string().url().optional(),\n  chatPromptTemplate: z.string().default(\n    \"{{preprompt}}{{#each messages}}{{#ifUser}}{{@root.userMessageToken}}{{content}}{{@root.userMessageEndToken}}{{/ifUser}}{{#ifAssistant}}{{@root.assistantMessageToken}}{{content}}{{@root.assistantMessageEndToken}}{{/ifAssistant}}{{/each}}{{assistantMessageToken}}\"\n  ),\n  promptExamples: z.array(\n    z.object({\n      title: z.string().min(1),\n      prompt: z.string().min(1)\n    })\n  ).optional(),\n  endpoints: z.array(endpointSchema).optional(),\n  parameters: z.object({\n    temperature: z.number().min(0).max(1).optional(),\n    truncate: z.number().int().positive().optional(),\n    max_new_tokens: z.number().int().positive().optional(),\n    stop: z.array(z.string()).optional(),\n    top_p: z.number().positive().optional(),\n    top_k: z.number().positive().optional(),\n    repetition_penalty: z.number().min(-2).max(2).optional()\n  }).passthrough().optional(),\n  multimodal: z.boolean().default(false),\n  unlisted: z.boolean().default(false),\n  embeddingModel: validateEmbeddingModelByName(embeddingModels).optional()\n});\nconst modelsRaw = z.array(modelConfig).parse(JSON5.parse(MODELS));\nconst processModel = async (m) => ({\n  ...m,\n  userMessageEndToken: m?.userMessageEndToken || m?.messageEndToken,\n  assistantMessageEndToken: m?.assistantMessageEndToken || m?.messageEndToken,\n  chatPromptRender: compileTemplate(m.chatPromptTemplate, m),\n  id: m.id || m.name,\n  displayName: m.displayName || m.name,\n  preprompt: m.prepromptUrl ? await fetch(m.prepromptUrl).then((r) => r.text()) : m.preprompt,\n  parameters: { ...m.parameters, stop_sequences: m.parameters?.stop }\n});\nconst addEndpoint = (m) => ({\n  ...m,\n  getEndpoint: async () => {\n    if (!m.endpoints) {\n      return endpointTgi({\n        type: \"tgi\",\n        url: `${HF_API_ROOT}/${m.name}`,\n        accessToken: HF_TOKEN,\n        weight: 1,\n        model: m\n      });\n    }\n    const totalWeight = sum(m.endpoints.map((e) => e.weight));\n    let random = Math.random() * totalWeight;\n    for (const endpoint of m.endpoints) {\n      if (random < endpoint.weight) {\n        const args = { ...endpoint, model: m };\n        switch (args.type) {\n          case \"tgi\":\n            return endpoints.tgi(args);\n          case \"aws\":\n            return await endpoints.aws(args);\n          case \"openai\":\n            return await endpoints.openai(args);\n          case \"llamacpp\":\n            return endpoints.llamacpp(args);\n          case \"ollama\":\n            return endpoints.ollama(args);\n          default:\n            return endpoints.tgi(args);\n        }\n      }\n      random -= endpoint.weight;\n    }\n    throw new Error(`Failed to select endpoint`);\n  }\n});\nconst models = await Promise.all(modelsRaw.map((e) => processModel(e).then(addEndpoint)));\nconst defaultModel = models[0];\nconst oldModels = z.array(\n  z.object({\n    id: z.string().optional(),\n    name: z.string().min(1),\n    displayName: z.string().min(1).optional()\n  })\n).parse(JSON5.parse(OLD_MODELS)).map((m) => ({ ...m, id: m.id || m.name, displayName: m.displayName || m.name }));\nconst validateModel = (_models) => {\n  return z.enum([_models[0].id, ..._models.slice(1).map((m) => m.id)]);\n};\nconst smallModel = defaultModel;\nexport {\n  defaultModel as a,\n  buildPrompt as b,\n  chunk as c,\n  defaultEmbeddingModel as d,\n  embeddingModels as e,\n  models as m,\n  oldModels as o,\n  smallModel as s,\n  validateModel as v\n};\n"],"names":[],"mappings":"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"}